<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.payment">
	 <insert id="insertPayment" parameterType="paymentVo">
	<selectKey keyProperty="paymentCode" order="BEFORE" resultType="int">
		select payment_seq.nextval from dual
	</selectKey>
	insert into payment
	values(#{paymentCode},'카드','결제완료',#{period},sysdate,to_date(#{paystartDate})+#{period},#{serviceCode},#{memberCode},#{jobopening},#{paystartDate},#{price})
	</insert> 
	
	<select id="getpaymentJobCount" resultType="int" parameterType="int">
	select count(*) from payment where jobopening=#{jobopening}
	</select>
	
	<update id="cancelPay" parameterType="int">
	update payment
	set progress='결제취소요청'
	where payment_code=#{paymentCode}
	</update>
	
	<select id="selectPaymentById" parameterType="string" resultType="map">
		select p.*, s.* 
		from payment p join service s
		on p.SERVICE_CODE = s.SERVICE_CODE
		where member_code=(select member_code from member where memberid=#{memberid})
	</select>
	
	<select id="selectPaymentByCode" parameterType="int" resultType="paymentVo">
		select * from payment
		where payment_code=#{paymentCode}
	</select>
	
	<select id="selectMainAdvertiseByServiceCode" resultType="map" parameterType="int">
	select v.*, c.*, trunc(end_date-sysdate) as dday
	from vvipmain v join companyJobOpen c
	on c.COMPANY_CODE = v.COMPANY_CODE
	where service_code=#{serviceCode}
	order by dbms_random.value
	</select>
	
	<select id="getCountByJobopening" resultType="int" parameterType="int">
	select count(*) from payment where jobopening=#{jobopening} and progress='결제완료'
	</select>
	
	<update id="updatePaysuccess" parameterType="int">
	update payment
	set progress='결제완료'
	where payment_code=#{paymentCode}
	</update>


	 <select id="selectTotalCount" parameterType="searchVo" resultType="int">
	 select count(*) from payment a join service b
				on a.service_code = b.service_code
				join member c
				on a.member_code = c.member_code
	 
	
	 <if test="searchKeyword != null and searchKeyword !=''">
	 	where ${searchCondition} like '%' || #{searchKeyword} || '%'
	 </if>
	 </select>


	<select id="selectPayment" parameterType="map" resultType="map" >
	select* from
	(
		select A.*, rownum as RNUM from 
		(
			select payment_code,paymentway,progress,period,paydate, s.servicename, m.memberid
				from payment p join service s
				on p.service_code = s.service_code
				join member m
				on p.member_code = m.member_code
				<where>
							<if test="searchVo.searchCondition!= null and searchVo.searchCondition!=''
								and searchVo.searchKeyword!= null and searchVo.searchKeyword!=''">
							
							
							<if test='searchVo.searchCondition=="memberid"'>
									 m.memberid like  '%' || #{searchVo.searchKeyword} || '%'
							</if>


							
							<if test="startDay!=null and startDay !='' and endDay!=null and endDay != ''">
								 <![CDATA[ or paydate >= #{startDay} and paydate <to_date(#{endDay})+1]]>
							</if>
					</if>				
					
					<if test=" searchVo.searchKeyword== null or searchVo.searchKeyword==''">
						
						<if test='searchVo.searchCondition=="progress"'>
									 progress ='a'
						</if>
						<if test='searchVo.searchCondition=="progress1"'>
									 progress ='b'
						</if>
						
						
						<if test="startDay!=null and startDay !='' and endDay!=null and endDay != ''">
							 <![CDATA[paydate >= #{startDay} and paydate <to_date(#{endDay})+1]]>
						</if>	
					</if>
				</where>

			) A
		)
	<![CDATA[where RNUM>#{searchVo.firstRecordIndex}  
		and RNUM<=#{searchVo.firstRecordIndex} + #{searchVo.recordCountPerPage}]]> 
	</select>
	
	 <select id="selectBySameTime" resultType="map" parameterType="paymentVo">
	 select p.*, j.jobtitle
	 from payment p join jobopening j
 	on p.JOBOPENING = j.JOBOPENING
	where to_char(paydate,'yyyy-MM-dd HH:mm:ss')=#{paydate} 
	and member_code=#{memberCode}
	order by paydate desc
	</select> 
	
	<select id="selectPayByTime" resultType="map" parameterType="string">
	select p.member_Code, s.servicename, sum(p.price) as totalprice ,p.progress, to_char(p.paydate,'yyyy-MM-dd HH:mm:ss') as ByTime
	from payment p join service s
	on p.SERVICE_CODE = s.SERVICE_CODE
	where p.member_code=(select member_Code from member where memberid=#{memberid})
	group by to_char(p.paydate,'yyyy-MM-dd HH:mm:ss'), s.servicename, p.progress, p.member_code
	order by to_char(p.paydate,'yyyy-MM-dd HH:mm:ss') desc
	</select>

	
</mapper>

